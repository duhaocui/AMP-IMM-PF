%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%程序初始化操作%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function PCenter=KF(r)

clc;
clear;
close all;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%全局变量定义%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
d=10*log10(2);%方差
r=10*log10(10);%观测噪声方差
T=1;%采样时间
outdoor_sensor_data=260;
indoor_sensor_data=101;
sensor_data=outdoor_sensor_data+indoor_sensor_data;
ZALL=zeros(4,sensor_data);
[ground_truthx,ground_truthy,heading,velocity]=Ground_Truth();
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%读取传感器数据%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for n=1:sensor_data
        if n<102
            gx(n)=ground_truthx(n)+ wgn(1, 1,  10*log10(2));%室内观测值，噪声方差为20
            gy(n)=ground_truthy(n)+ wgn(1, 1,  10*log10(2));%室内观测值，噪声方差为20
        else
            gx(n)=ground_truthx(n)+ wgn(1, 1,  10*log10(10));%室外观测值，噪声方差为50
            gy(n)=ground_truthy(n)+ wgn(1, 1,  10*log10(10));%室外观测值，噪声方差为50
        end
        phi(n)=(heading(n))*pi/180;%航向角
        dd(n)=velocity(n);%速度
        dx(n)=dd(n)*sin(phi(n))*4;%某一周期的东向位移
        dy(n)=dd(n)*cos(phi(n))*4;%某一周期的北向位移
        Ve(n)=dd(n)*sin(phi(n));%里程计输入的东向速度，暂时用某一周期的东向位移代替
        Vn(n)=dd(n)*cos(phi(n));%里程计输出的北向速度，暂时用某一周期的北向位移代替
        ZALL(:,n)=[gx(n),gy(n),dx(n),dy(n)];
end


%过程向量A
A=[
    1,0,T,0,0;
    0,1,0,T,0;
    0,0,1,0,0,;
    0,0,0,1,0;
    0,0,0,0,1;
   ];
%过程噪声协方差矩阵
Q=diag([0,0,d,d,d]);
%观测噪声协方差矩阵
R=diag([r,r,r,r]);
P=diag([0,0,d,d,d]); % 滤波输出误差均方差矩阵
Xfli=[ZALL(1,1),ZALL(2,1),0,0,0]'; %初始条件进行估计
for k=1:sensor_data
    C=[1,0,0,0,0;
        0,1,0,0,0;
        0,0,1,0,-Vn(k);
        0,0,0,1,Ve(k);
        ];
     K_location(:,k)=Xfli;
     Xest=A*Xfli; % 更新该时刻的预测值 ---kalman equation1
     %Xes=A*Xef+Gamma*W(k-1); % 预测输出误差 
     Pxe=A*P*A'+Q; % 预测误差的协方差阵 ---kalman equation
     K=Pxe*C'/(C*Pxe*C'+R); % Kalman滤波增益 ---kalman equation3
     Xfli=Xest+K*(ZALL(:,k)-C*Xest);% k时刻Kalman滤波器的输出值 ---kalman equation4
     Px=(eye(5)-K*C)*Pxe;%滤波输出误差均方差矩阵 ---kalman equation5
end

cordinatex=ZALL(1,5);
cordinatey=ZALL(2,5);
%显示滤波轨迹
figure
set(gca,'FontSize',12);
[groundtruthx,groundtruthy]=Ground_Truth();
plot(groundtruthx,groundtruthy,'r');hold on;
% plot(ZALL(1,:),ZALL(2,:),'o');hold on;
plot(K_location(1,:),K_location(2,:),'g');hold off;
axis([cordinatex-100 cordinatex+200 cordinatey-200 cordinatey+100]),grid on;
xlabel('x', 'FontSize', 20); ylabel('y', 'FontSize', 20);
legend('真实轨迹','目标滤波航迹');
axis equal;

    

